package com.cdy.cms.workbench.mapper;

import com.cdy.cms.workbench.pojo.Classroom;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface ClassroomMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classroom_information
     *
     * @mbggenerated Thu Apr 13 23:53:27 CST 2023
     */
    int deleteByPrimaryKey(String classroomInformationId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classroom_information
     *
     * @mbggenerated Thu Apr 13 23:53:27 CST 2023
     */
    int insert(Classroom record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classroom_information
     *
     * @mbggenerated Thu Apr 13 23:53:27 CST 2023
     */
    int insertSelective(Classroom record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classroom_information
     *
     * @mbggenerated Thu Apr 13 23:53:27 CST 2023
     */
    Classroom selectByClassRoomId(String classroomName);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classroom_information
     *
     * @mbggenerated Thu Apr 13 23:53:27 CST 2023
     */
    int updateByPrimaryKeySelective(Classroom record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table classroom_information
     *
     * @mbggenerated Thu Apr 13 23:53:27 CST 2023
     */
    int updateByPrimaryKey(Classroom record);

    Classroom selectByClassRoomName(String name);

    Classroom selectByClassRoomCourse(String courseName);

    List<Classroom> queryAllClassrooms();

    List<Classroom> selectClassroomByConditionForPage(Map<String,Object> map);

    int queryCountOfClassroomByCondition(Map<String,Object> map);

    List<Classroom> selectClassroomByName(Map<String,Object> map);

    int queryCountOfClassroomByName(Map<String,Object> map);

    Classroom showClassroomDetailsForStudent(String classroomName);

    List<Classroom> queryAllEmptyClassrooms();

    int updateClassroomCourse(@Param("correspondingCourses")String correspondingCourses,@Param("classroomName")String classroomName);

    int deleteClassrooomCourse(String classroomName[]);

    int deleteClassrooomOneCourse(@Param("classroomName")String oldName);

    int changeOldClassroomCourse(@Param("classroomName")String classroomName,@Param("correspondingCourses")String correspondingCourses);
}